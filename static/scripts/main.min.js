var initApp=function(){if(!("modules"in app&&"globalWrapper"in app.modules)){var e=function(){var e=this;e.html=document.querySelector("html"),e.body=document.querySelector("body"),e.modules=app.modules,e.initModules=function(){for(var o in e.modules)e.modules.hasOwnProperty(o)&&"undefined"!=typeof e.modules[o].init&&"globalWrapper"!==o&&e.modules[o].init()},e.init=function(){e.initModules()}};"modules"in app||(app.modules={}),app.modules.globalWrapper=new e,app.modules.globalWrapper.init()}};window.addEventListener("load",initApp),function(){if(!("modules"in app&&"modal"in app.modules)){var e=function(){var e=this;e.html="",e.body="",e.container=document.querySelector(".modal"),e.openButton=document.querySelector(".modal_trigger"),e.closeButton=document.querySelector(".modal_close"),e.setupListener=function(){e.openButton.addEventListener("click",e.open),e.closeButton.addEventListener("click",e.close)},e.open=function(o){o.preventDefault();var t=this,n=t.getAttribute("href"),l=document.querySelector(n);e.html.classList.add("modal_state_open"),l.classList.add("modal_state_open")},e.close=function(o){o.preventDefault();var t=this,n=t.closest(".modal");n.classList.remove("modal_state_open"),e.html.classList.remove("modal_state_open")},e.importDefaults=function(){e.html=app.modules.globalWrapper.html,e.body=app.modules.globalWrapper.body},e.init=function(){e.container&&(e.importDefaults(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.modal=new e}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdsb2JhbFdyYXBwZXIvZ2xvYmFsV3JhcHBlci5qcyIsIm1vZGFsL21vZGFsLmpzIl0sIm5hbWVzIjpbImluaXRBcHAiLCJhcHAiLCJtb2R1bGVzIiwiR2xvYmFsV3JhcHBlciIsInNlbGYiLCJ0aGlzIiwiaHRtbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImJvZHkiLCJpbml0TW9kdWxlcyIsIm1vZHVsZSIsImhhc093blByb3BlcnR5IiwiaW5pdCIsImdsb2JhbFdyYXBwZXIiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwiTW9kYWwiLCJjb250YWluZXIiLCJvcGVuQnV0dG9uIiwiY2xvc2VCdXR0b24iLCJzZXR1cExpc3RlbmVyIiwib3BlbiIsImNsb3NlIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInRhcmdldCIsInNyYyIsImdldEF0dHJpYnV0ZSIsImNsYXNzTGlzdCIsImFkZCIsImNsb3Nlc3QiLCJyZW1vdmUiLCJpbXBvcnREZWZhdWx0cyIsIm1vZGFsIl0sIm1hcHBpbmdzIjoiQUFBQSxHQUFBQSxTQUFBLFdBQ0EsS0FBQSxXQUFBQyxNQUFBLGlCQUFBQSxLQUFBQyxTQUFBLENBUUEsR0FBQUMsR0FBQSxXQUNBLEdBQUFDLEdBQUFDLElBRUFELEdBQUFFLEtBQUFDLFNBQUFDLGNBQUEsUUFDQUosRUFBQUssS0FBQUYsU0FBQUMsY0FBQSxRQUNBSixFQUFBRixRQUFBRCxJQUFBQyxRQUtBRSxFQUFBTSxZQUFBLFdBQ0EsSUFBQSxHQUFBQyxLQUFBUCxHQUFBRixRQUVBRSxFQUFBRixRQUFBVSxlQUFBRCxJQUVBLG1CQUFBUCxHQUFBRixRQUFBUyxHQUFBRSxNQUFBLGtCQUFBRixHQUVBUCxFQUFBRixRQUFBUyxHQUFBRSxRQVlBVCxFQUFBUyxLQUFBLFdBQ0FULEVBQUFNLGVBSUEsWUFBQVQsT0FDQUEsSUFBQUMsWUFHQUQsSUFBQUMsUUFBQVksY0FBQSxHQUFBWCxHQUVBRixJQUFBQyxRQUFBWSxjQUFBRCxRQUdBRSxRQUFBQyxpQkFBQSxPQUFBaEIsU0NwREEsV0FDQSxLQUFBLFdBQUFDLE1BQUEsU0FBQUEsS0FBQUMsU0FBQSxDQVFBLEdBQUFlLEdBQUEsV0FDQSxHQUFBYixHQUFBQyxJQUVBRCxHQUFBRSxLQUFBLEdBQ0FGLEVBQUFLLEtBQUEsR0FDQUwsRUFBQWMsVUFBQVgsU0FBQUMsY0FBQSxVQUNBSixFQUFBZSxXQUFBWixTQUFBQyxjQUFBLGtCQUNBSixFQUFBZ0IsWUFBQWIsU0FBQUMsY0FBQSxnQkFLQUosRUFBQWlCLGNBQUEsV0FDQWpCLEVBQUFlLFdBQUFILGlCQUFBLFFBQUFaLEVBQUFrQixNQUNBbEIsRUFBQWdCLFlBQUFKLGlCQUFBLFFBQUFaLEVBQUFtQixRQUdBbkIsRUFBQWtCLEtBQUEsU0FBQUUsR0FDQUEsRUFBQUMsZ0JBRUEsSUFBQUMsR0FBQXJCLEtBQ0FzQixFQUFBRCxFQUFBRSxhQUFBLFFBQ0FWLEVBQUFYLFNBQUFDLGNBQUFtQixFQUVBdkIsR0FBQUUsS0FBQXVCLFVBQUFDLElBQUEsb0JBQ0FaLEVBQUFXLFVBQUFDLElBQUEscUJBR0ExQixFQUFBbUIsTUFBQSxTQUFBQyxHQUNBQSxFQUFBQyxnQkFFQSxJQUFBQyxHQUFBckIsS0FDQWEsRUFBQVEsRUFBQUssUUFBQSxTQUVBYixHQUFBVyxVQUFBRyxPQUFBLG9CQUNBNUIsRUFBQUUsS0FBQXVCLFVBQUFHLE9BQUEscUJBTUE1QixFQUFBNkIsZUFBQSxXQUNBN0IsRUFBQUUsS0FBQUwsSUFBQUMsUUFBQVksY0FBQVIsS0FDQUYsRUFBQUssS0FBQVIsSUFBQUMsUUFBQVksY0FBQUwsTUFNQUwsRUFBQVMsS0FBQSxXQUNBVCxFQUFBYyxZQUVBZCxFQUFBNkIsaUJBQ0E3QixFQUFBaUIsa0JBTUEsWUFBQXBCLE9BQ0FBLElBQUFDLFlBR0FELElBQUFDLFFBQUFnQyxNQUFBLEdBQUFqQiIsImZpbGUiOiJtYWluLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBpbml0QXBwID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKCdtb2R1bGVzJyBpbiBhcHAgJiYgJ2dsb2JhbFdyYXBwZXInIGluIGFwcC5tb2R1bGVzKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IEdsb2JhbFdyYXBwZXIgY2xhc3MuXG4gICAgICogQGNsYXNzXG4gICAgICovXG4gICAgdmFyIEdsb2JhbFdyYXBwZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgICAgICBzZWxmLmh0bWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdodG1sJyk7XG4gICAgICAgIHNlbGYuYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcbiAgICAgICAgc2VsZi5tb2R1bGVzID0gYXBwLm1vZHVsZXM7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEluaXQgYWxsIG1vZHVsZXMgaW4gYXBwLm1vZHVsZXNcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuaW5pdE1vZHVsZXMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGZvciAodmFyIG1vZHVsZSBpbiBzZWxmLm1vZHVsZXMpIHtcblxuICAgICAgICAgICAgICAgIGlmIChzZWxmLm1vZHVsZXMuaGFzT3duUHJvcGVydHkobW9kdWxlKSkge1xuXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2Ygc2VsZi5tb2R1bGVzW21vZHVsZV0uaW5pdCAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlICE9PSAnZ2xvYmFsV3JhcHBlcicpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5tb2R1bGVzW21vZHVsZV0uaW5pdCgpO1xuXG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbml0IG1vZHVsZVxuICAgICAgICAgKi9cbiAgICAgICAgc2VsZi5pbml0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBzZWxmLmluaXRNb2R1bGVzKCk7XG4gICAgICAgIH07XG4gICAgfTtcblxuICAgIGlmICghKCdtb2R1bGVzJyBpbiBhcHApKSB7XG4gICAgICAgIGFwcC5tb2R1bGVzID0ge307XG4gICAgfVxuXG4gICAgYXBwLm1vZHVsZXMuZ2xvYmFsV3JhcHBlciA9IG5ldyBHbG9iYWxXcmFwcGVyKCk7XG5cbiAgICBhcHAubW9kdWxlcy5nbG9iYWxXcmFwcGVyLmluaXQoKTtcbn07XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgaW5pdEFwcCk7XG4iLCIoZnVuY3Rpb24gKCkge1xuICAgIGlmICgnbW9kdWxlcycgaW4gYXBwICYmICdtb2RhbCcgaW4gYXBwLm1vZHVsZXMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgTW9kYWwgY2xhc3MuXG4gICAgICogQGNsYXNzXG4gICAgICovXG4gICAgdmFyIE1vZGFsID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgICAgc2VsZi5odG1sID0gJyc7XG4gICAgICAgIHNlbGYuYm9keSA9ICcnO1xuICAgICAgICBzZWxmLmNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbCcpO1xuICAgICAgICBzZWxmLm9wZW5CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfdHJpZ2dlcicpO1xuICAgICAgICBzZWxmLmNsb3NlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsX2Nsb3NlJyk7XG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEFkZCBldmVudCBsaXN0ZW5lcnNcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuc2V0dXBMaXN0ZW5lciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgc2VsZi5vcGVuQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2VsZi5vcGVuKTtcbiAgICAgICAgICAgIHNlbGYuY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzZWxmLmNsb3NlKTtcbiAgICAgICAgfTtcblxuICAgICAgICBzZWxmLm9wZW4gPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgdmFyIHRhcmdldCA9IHRoaXMsXG4gICAgICAgICAgICAgICAgc3JjID0gdGFyZ2V0LmdldEF0dHJpYnV0ZSgnaHJlZicpLFxuICAgICAgICAgICAgICAgIGNvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc3JjKTtcblxuICAgICAgICAgICAgc2VsZi5odG1sLmNsYXNzTGlzdC5hZGQoJ21vZGFsX3N0YXRlX29wZW4nKTtcbiAgICAgICAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdtb2RhbF9zdGF0ZV9vcGVuJyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgc2VsZi5jbG9zZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgICAgICB2YXIgdGFyZ2V0ID0gdGhpcyxcbiAgICAgICAgICAgICAgICBjb250YWluZXIgPSB0YXJnZXQuY2xvc2VzdCgnLm1vZGFsJyk7XG5cbiAgICAgICAgICAgIGNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKCdtb2RhbF9zdGF0ZV9vcGVuJyk7XG4gICAgICAgICAgICBzZWxmLmh0bWwuY2xhc3NMaXN0LnJlbW92ZSgnbW9kYWxfc3RhdGVfb3BlbicpO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBJbXBvcnQgcHJvcGVydGllcyBmcm9tIE1haW4gY2xhc3NcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuaW1wb3J0RGVmYXVsdHMgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNlbGYuaHRtbCA9IGFwcC5tb2R1bGVzLmdsb2JhbFdyYXBwZXIuaHRtbDtcbiAgICAgICAgICAgIHNlbGYuYm9keSA9IGFwcC5tb2R1bGVzLmdsb2JhbFdyYXBwZXIuYm9keTtcbiAgICAgICAgfTtcblxuICAgICAgICAvKipcbiAgICAgICAgICogSW5pdCBtb2R1bGVcbiAgICAgICAgICovXG4gICAgICAgIHNlbGYuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgaWYgKHNlbGYuY29udGFpbmVyKSB7XG5cbiAgICAgICAgICAgICAgICBzZWxmLmltcG9ydERlZmF1bHRzKCk7XG4gICAgICAgICAgICAgICAgc2VsZi5zZXR1cExpc3RlbmVyKCk7XG5cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgaWYgKCEoJ21vZHVsZXMnIGluIGFwcCkpIHtcbiAgICAgICAgYXBwLm1vZHVsZXMgPSB7fTtcbiAgICB9XG5cbiAgICBhcHAubW9kdWxlcy5tb2RhbCA9IG5ldyBNb2RhbCgpO1xufSkoKTtcbiJdfQ==
