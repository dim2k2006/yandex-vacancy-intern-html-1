var initApp=function(){if(!("modules"in app&&"globalWrapper"in app.modules)){var e=function(){var e=this;e.html=document.querySelector("html"),e.body=document.querySelector("body"),e.container=document.querySelector(".globalWrapper"),e.main=document.querySelector(".main"),e.mainHeight=e.main.offsetHeight,e.aside=document.querySelector(".aside"),e.asideBottomLimit=parseInt(e.aside.getBoundingClientRect().bottom+window.pageYOffset),e.asideHidden=!1,e.modules=app.modules,e.setupListener=function(){window.addEventListener("scroll",e.scrollHandle),e.main.addEventListener("transitionend",e.handlePosition)},e.handlePosition=function(t){if("width"===t.propertyName){var n=e.main.offsetHeight,o=0;e.asideHidden?(o=e.mainHeight-n,e.main.style.marginTop=o+"px",window.scrollBy(0,o/2)):(o=parseInt(e.main.style.marginTop),e.main.style.marginTop="0px",window.scrollBy(0,o*-1))}},e.scrollHandle=function(){var t=window.pageYOffset;e.asideHidden=t>e.asideBottomLimit,e.asideHidden?e.hideAside():e.showAside()},e.hideAside=function(){e.container.classList.contains("globalWrapper_aside_hidden")||e.container.classList.add("globalWrapper_aside_hidden")},e.showAside=function(){e.container.classList.contains("globalWrapper_aside_hidden")&&e.container.classList.remove("globalWrapper_aside_hidden")},e.initModules=function(){for(var t in e.modules)e.modules.hasOwnProperty(t)&&"undefined"!=typeof e.modules[t].init&&"globalWrapper"!==t&&e.modules[t].init()},e.init=function(){e.initModules(),e.setupListener()}};"modules"in app||(app.modules={}),app.modules.globalWrapper=new e,app.modules.globalWrapper.init()}};window.addEventListener("load",initApp),function(){if(!("modules"in app&&"modal"in app.modules)){var e=function(){var e=this;e.html="",e.body="",e.container=document.querySelector(".modal"),e.openButton=document.querySelector(".modal_trigger"),e.closeButton=document.querySelector(".modal_close"),e.setupListener=function(){e.openButton.addEventListener("click",e.open),e.closeButton.addEventListener("click",e.close)},e.open=function(t){t.preventDefault();var n=this,o=n.getAttribute("href"),i=document.querySelector(o);e.html.classList.add("modal_state_open"),i.classList.add("modal_state_open")},e.close=function(t){t.preventDefault();var n=this,o=n.closest(".modal");o.classList.remove("modal_state_open"),e.html.classList.remove("modal_state_open")},e.importDefaults=function(){e.html=app.modules.globalWrapper.html,e.body=app.modules.globalWrapper.body},e.init=function(){e.container&&(e.importDefaults(),e.setupListener())}};"modules"in app||(app.modules={}),app.modules.modal=new e}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
